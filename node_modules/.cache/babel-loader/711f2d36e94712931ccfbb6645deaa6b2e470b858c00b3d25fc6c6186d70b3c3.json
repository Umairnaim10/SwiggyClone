{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practise\\\\pracise-react\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\nimport RestaurantCard from \"./RestaurantCard\";\nimport { useState, useEffect } from \"react\";\nimport Shimmer from \"./Shimmer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction filterData(searchText, resList) {\n  const filterData = resList.filter(restaurant => {\n    var _restaurant$data, _restaurant$data$name;\n    return restaurant === null || restaurant === void 0 ? void 0 : (_restaurant$data = restaurant.data) === null || _restaurant$data === void 0 ? void 0 : (_restaurant$data$name = _restaurant$data.name) === null || _restaurant$data$name === void 0 ? void 0 : _restaurant$data$name.toLowerCase().includes(searchText.toLowerCase());\n  });\n  return filterData;\n}\nconst Body = () => {\n  _s();\n  const [resList, setresList] = useState([]);\n  const [searchText, setsearchText] = useState(\"\");\n\n  // empty dependency array once after render\n  // dep arry [searchText] ⇒ once after initial render + everytime after redern (my searchText changes)\n  useEffect(() => {\n    restaurantcall();\n  }, [searchText]);\n  async function restaurantcall() {\n    var _json$data, _json$data$cards$, _json$data$cards$$dat, _json$data$cards$$dat2;\n    const data = await fetch(\"https://www.swiggy.com/dapi/restaurants/list/v5?lat=12.9351929&lng=77.62448069999999&page_type=DESKTOP_WEB_LISTING\");\n    const json = await data.json();\n    setresList(json === null || json === void 0 ? void 0 : (_json$data = json.data) === null || _json$data === void 0 ? void 0 : (_json$data$cards$ = _json$data.cards[2]) === null || _json$data$cards$ === void 0 ? void 0 : (_json$data$cards$$dat = _json$data$cards$.data) === null || _json$data$cards$$dat === void 0 ? void 0 : (_json$data$cards$$dat2 = _json$data$cards$$dat.data) === null || _json$data$cards$$dat2 === void 0 ? void 0 : _json$data$cards$$dat2.cards); //Optional Chaining\n  }\n\n  return resList.length === 0 ? /*#__PURE__*/_jsxDEV(Shimmer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 31\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        onClick: () => {\n          const UpdateresList = resList.filter(res => res.data.avgRating > 4);\n          setresList(UpdateresList);\n          //  Whenever react state variable is updated its re render the component\n        },\n        children: \"TOP Rated Resturants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        onClick: () => {\n          const UpdateresList = resList.filter(res => res.data.deliveryT > 4);\n          setresList(UpdateresList);\n          //  Whenever react state variable is updated its re render the component\n        },\n        children: \"Delivery Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-input\",\n        type: \"text\",\n        placeholder: \"Search\",\n        value: searchText,\n        onChange: e => setsearchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        onClick: () => {\n          const data = filterData(searchText, resList);\n          setresList(data);\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"res-container\",\n      children: resList.map(restaurant => {\n        return /*#__PURE__*/_jsxDEV(RestaurantCard, {\n          ...restaurant.data\n        }, restaurant.data.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n        // not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\n        ;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"yJBv/55inpXxKWXvXeYQulkeccA=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["RestaurantCard","useState","useEffect","Shimmer","jsxDEV","_jsxDEV","filterData","searchText","resList","filter","restaurant","_restaurant$data","_restaurant$data$name","data","name","toLowerCase","includes","Body","_s","setresList","setsearchText","restaurantcall","_json$data","_json$data$cards$","_json$data$cards$$dat","_json$data$cards$$dat2","fetch","json","cards","length","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","UpdateresList","res","avgRating","deliveryT","type","placeholder","value","onChange","e","target","map","id","_c","$RefreshReg$"],"sources":["E:/React Practise/pracise-react/src/components/Body.js"],"sourcesContent":["import RestaurantCard from \"./RestaurantCard\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Shimmer from \"./Shimmer\";\r\n\r\nfunction filterData(searchText, resList) {\r\n  const filterData = resList.filter((restaurant) =>\r\n    restaurant?.data?.name?.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n  return filterData;\r\n}\r\n\r\nconst Body = () => {\r\n  const [resList, setresList] = useState([]);\r\n  const [searchText, setsearchText] = useState(\"\");\r\n\r\n  // empty dependency array once after render\r\n  // dep arry [searchText] ⇒ once after initial render + everytime after redern (my searchText changes)\r\n  useEffect(() => {\r\n    restaurantcall() ;\r\n  }, [searchText]);\r\n\r\n  async function restaurantcall(){\r\n    const data = await fetch(\"https://www.swiggy.com/dapi/restaurants/list/v5?lat=12.9351929&lng=77.62448069999999&page_type=DESKTOP_WEB_LISTING\");\r\n    const json = await data.json();\r\n   setresList(json?.data?.cards[2]?.data?.data?.cards ) //Optional Chaining\r\n  }\r\n\r\n  return (resList.length===0)?<Shimmer/> :(\r\n    <div className=\"body\">\r\n      <div className=\"filter\">\r\n        <button\r\n          className=\"filter-btn\"\r\n          onClick={() => {\r\n            const UpdateresList = resList.filter(\r\n              (res) => res.data.avgRating > 4\r\n            );\r\n            setresList(UpdateresList);\r\n            //  Whenever react state variable is updated its re render the component\r\n          }}\r\n        >\r\n          TOP Rated Resturants\r\n        </button>\r\n\r\n        <button\r\n          className=\"filter-btn\"\r\n          onClick={() => {\r\n            const UpdateresList = resList.filter(\r\n              (res) => res.data.deliveryT > 4\r\n            );\r\n            setresList(UpdateresList);\r\n            //  Whenever react state variable is updated its re render the component\r\n          }}\r\n        >\r\n          Delivery Time\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"search-container\">\r\n        <input\r\n          className=\"search-input\"\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={searchText}\r\n          onChange={(e) => setsearchText(e.target.value)}\r\n        />\r\n\r\n        <button\r\n          className=\"search-btn\"\r\n          onClick={() => {\r\n            const data = filterData(searchText, resList);\r\n            setresList(data);\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n      <div className=\"res-container\">\r\n        {resList.map((restaurant) => {\r\n          return (\r\n          <RestaurantCard key={restaurant.data.id} {...restaurant.data} />\r\n          // not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\r\n        )})}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}