{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practise\\\\pracise-react\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\n// not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\nimport RestaurantCard from \"./RestaurantCard\";\n// import resList from \"../utils/mockdata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [resList, setresList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        onClick: () => {\n          const UpdateresList = resList.filter(res => res.data.avgRating > 4);\n          console.log(UpdateresList);\n        },\n        children: \"TOP Rated Resturants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"res-container\",\n      children: resList.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        resData: restaurant\n      }, restaurant.data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"qxn5d6VQp/I4gx9rbjcHtKmxbu8=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["RestaurantCard","jsxDEV","_jsxDEV","Body","_s","resList","setresList","useState","className","children","onClick","UpdateresList","filter","res","data","avgRating","console","log","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","resData","id","_c","$RefreshReg$"],"sources":["E:/React Practise/pracise-react/src/components/Body.js"],"sourcesContent":["// not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\r\nimport RestaurantCard from \"./RestaurantCard\";\r\n// import resList from \"../utils/mockdata\";\r\n\r\n\r\nconst Body = () => {\r\n  const[resList,setresList] = useState([])\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"filter\">\r\n        <button\r\n          className=\"filter-btn\"\r\n          onClick={() => {\r\n           const UpdateresList = resList.filter((res) => res.data.avgRating>4);\r\n\r\n            console.log(UpdateresList);\r\n          }}\r\n        >\r\n          TOP Rated Resturants\r\n        </button>\r\n      </div>\r\n      <div className=\"res-container\">\r\n        {resList.map((restaurant) => (\r\n          <RestaurantCard key={restaurant.data.id} resData={restaurant} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"],"mappings":";;AAAA;AACA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAK,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACxC,oBACEL,OAAA;IAAKM,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBP,OAAA;MAAKM,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBP,OAAA;QACEM,SAAS,EAAC,YAAY;QACtBE,OAAO,EAAEA,CAAA,KAAM;UACd,MAAMC,aAAa,GAAGN,OAAO,CAACO,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAACC,SAAS,GAAC,CAAC,CAAC;UAElEC,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;QAC5B,CAAE;QAAAF,QAAA,EACH;MAED;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNnB,OAAA;MAAKM,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BJ,OAAO,CAACiB,GAAG,CAAEC,UAAU,iBACtBrB,OAAA,CAACF,cAAc;QAA0BwB,OAAO,EAAED;MAAW,GAAxCA,UAAU,CAACT,IAAI,CAACW,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACjB,EAAA,CAvBID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAyBV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}