{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practise\\\\pracise-react\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\n// not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\nimport RestaurantCard from \"./RestaurantCard\";\nimport restaurantData from \"../utils/mockdata\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction filterData(searchText, resList) {\n  const filterData = resList.filter(restaurant => {\n    var _restaurant$data, _restaurant$data$name;\n    return restaurant === null || restaurant === void 0 ? void 0 : (_restaurant$data = restaurant.data) === null || _restaurant$data === void 0 ? void 0 : (_restaurant$data$name = _restaurant$data.name) === null || _restaurant$data$name === void 0 ? void 0 : _restaurant$data$name.toLowerCase().includes(searchText.toLowerCase());\n  });\n  return filterData;\n}\nconst Body = () => {\n  _s();\n  const [resList, setresList] = useState(restaurantData);\n  const [searchText, setsearchText] = useState(\"\");\n\n  // empty dependency array once after render\n  // dep arry [searchText] ⇒ once after initial render + everytime after redern (my searchText changes)\n  useEffect(() => {\n    restaurantcall();\n  }, [searchText]);\n  async function restaurantcall() {\n    const data = await fetch(\"https://www.swiggy.com/dapi/restaurants/list/v5?lat=19.0759837&lng=72.8776559&page_type=DESKTOP_WEB_LISTING\");\n    const json = await data.json();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        onClick: () => {\n          const UpdateresList = resList.filter(res => res.data.avgRating > 4);\n          setresList(UpdateresList);\n          //  Whenever react state variable is updated its re render the component\n        },\n        children: \"TOP Rated Resturants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-input\",\n        type: \"text\",\n        placeholder: \"Search\",\n        value: searchText,\n        onChange: e => setsearchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        onClick: () => {\n          const data = filterData(searchText, resList);\n          setresList(data);\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"res-container\",\n      children: resList.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        ...restaurant.data\n      }, restaurant.data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"AZeZ3O5uaSgIglSy13kYRGuXzL4=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["RestaurantCard","restaurantData","useState","useEffect","jsxDEV","_jsxDEV","filterData","searchText","resList","filter","restaurant","_restaurant$data","_restaurant$data$name","data","name","toLowerCase","includes","Body","_s","setresList","setsearchText","restaurantcall","fetch","json","className","children","onClick","UpdateresList","res","avgRating","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","id","_c","$RefreshReg$"],"sources":["E:/React Practise/pracise-react/src/components/Body.js"],"sourcesContent":["// not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\r\nimport RestaurantCard from \"./RestaurantCard\";\r\nimport restaurantData from \"../utils/mockdata\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction filterData(searchText, resList) {\r\n  const filterData = resList.filter((restaurant) =>\r\n    restaurant?.data?.name?.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n  return filterData;\r\n}\r\n\r\nconst Body = () => {\r\n  const [resList, setresList] = useState(restaurantData);\r\n  const [searchText, setsearchText] = useState(\"\");\r\n\r\n  // empty dependency array once after render\r\n  // dep arry [searchText] ⇒ once after initial render + everytime after redern (my searchText changes)\r\n  useEffect(() => {\r\n    restaurantcall();\r\n  }, [searchText]);\r\n\r\n  async function restaurantcall(){\r\n    const data = await fetch(\"https://www.swiggy.com/dapi/restaurants/list/v5?lat=19.0759837&lng=72.8776559&page_type=DESKTOP_WEB_LISTING\");\r\n    const json = await data.json();\r\n  }\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"filter\">\r\n        <button\r\n          className=\"filter-btn\"\r\n          onClick={() => {\r\n            const UpdateresList = resList.filter(\r\n              (res) => res.data.avgRating > 4\r\n            );\r\n            setresList(UpdateresList);\r\n            //  Whenever react state variable is updated its re render the component\r\n          }}\r\n        >\r\n          TOP Rated Resturants\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"search-container\">\r\n        <input\r\n          className=\"search-input\"\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={searchText}\r\n          onChange={(e) => setsearchText(e.target.value)}\r\n        />\r\n\r\n        <button\r\n          className=\"search-btn\"\r\n          onClick={() => {\r\n            const data = filterData(searchText, resList);\r\n            setresList(data);\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n      <div className=\"res-container\">\r\n        {resList.map((restaurant) => (\r\n          <RestaurantCard key={restaurant.data.id} {...restaurant.data} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}