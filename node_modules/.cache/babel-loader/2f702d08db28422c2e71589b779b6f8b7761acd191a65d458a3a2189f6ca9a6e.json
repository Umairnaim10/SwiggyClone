{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practise\\\\pracise-react\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\n// not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\nimport RestaurantCard from \"./RestaurantCard\";\nimport restaurantData from \"../utils/mockdata\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction filterData(searchText, resList) {\n  const filterData = resList.filter(restaurant => restaurant.data.name.includes(searchText));\n  return filterData;\n}\nconst Body = () => {\n  _s();\n  const [restaurantsData, setRestaurantsData] = useState([]);\n  const [searchText, setsearchText] = useState(\"\");\n  useEffect(() => {\n    getRestaurants();\n  }, []);\n  async function getRestaurants() {\n    var _json$data, _json$data$cards$, _json$data$cards$$dat, _json$data$cards$$dat2;\n    const data = await fetch(\"https://www.swiggy.com/dapi/restaurants/list/v5?lat=19.0759837&lng=72.8776559&page_type=DESKTOP_WEB_LISTING\");\n    const json = await data.json();\n    setRestaurantsData(json === null || json === void 0 ? void 0 : (_json$data = json.data) === null || _json$data === void 0 ? void 0 : (_json$data$cards$ = _json$data.cards[2]) === null || _json$data$cards$ === void 0 ? void 0 : (_json$data$cards$$dat = _json$data$cards$.data) === null || _json$data$cards$$dat === void 0 ? void 0 : (_json$data$cards$$dat2 = _json$data$cards$$dat.data) === null || _json$data$cards$$dat2 === void 0 ? void 0 : _json$data$cards$$dat2.cards);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        onClick: () => {\n          const UpdateresList = resList.filter(res => res.data.avgRating > 4);\n          setresList(UpdateresList);\n          //  Whenever react state variable is updated its re render the component\n        },\n        children: \"TOP Rated Resturants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-input\",\n        type: \"text\",\n        placeholder: \"Search\",\n        value: searchText,\n        onChange: e => setsearchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        onClick: () => {\n          const data = filterData(searchText, resList);\n          setsearchText(data);\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"res-container\",\n      children: restaurantsData.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        resData: restaurant\n      }, restaurant.data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"hCMMEuq1hI4in79mehRqqX0X8zE=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["RestaurantCard","restaurantData","useState","useEffect","jsxDEV","_jsxDEV","filterData","searchText","resList","filter","restaurant","data","name","includes","Body","_s","restaurantsData","setRestaurantsData","setsearchText","getRestaurants","_json$data","_json$data$cards$","_json$data$cards$$dat","_json$data$cards$$dat2","fetch","json","cards","className","children","onClick","UpdateresList","res","avgRating","setresList","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","resData","id","_c","$RefreshReg$"],"sources":["E:/React Practise/pracise-react/src/components/Body.js"],"sourcesContent":["// not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\r\nimport RestaurantCard from \"./RestaurantCard\";\r\nimport restaurantData from \"../utils/mockdata\";\r\nimport { useState,useEffect } from \"react\";\r\n\r\nfunction filterData(searchText, resList) {\r\n  const filterData = resList.filter((restaurant) =>\r\n    restaurant.data.name.includes(searchText)\r\n  );\r\n  return filterData;\r\n}\r\n\r\nconst Body = () => {\r\n  const [restaurantsData, setRestaurantsData] = useState([]);\r\n  const [searchText, setsearchText] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getRestaurants();\r\n}, []);\r\n\r\n\r\n  async function getRestaurants() {\r\n    const data = await fetch(\"https://www.swiggy.com/dapi/restaurants/list/v5?lat=19.0759837&lng=72.8776559&page_type=DESKTOP_WEB_LISTING\");\r\n    const json = await data.json();\r\n    setRestaurantsData(json?.data?.cards[2]?.data?.data?.cards);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"filter\">\r\n        <button\r\n          className=\"filter-btn\"\r\n          onClick={() => {\r\n            const UpdateresList = resList.filter(\r\n              (res) => res.data.avgRating > 4\r\n            );\r\n            setresList(UpdateresList);\r\n            //  Whenever react state variable is updated its re render the component\r\n          }}\r\n        >\r\n          TOP Rated Resturants\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"search-container\">\r\n          <input\r\n            className=\"search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            value={searchText}\r\n            onChange={(e) => setsearchText(e.target.value)}\r\n          />\r\n\r\n          <button\r\n            className=\"search-btn\"\r\n            onClick={() => {\r\n              const data = filterData(searchText, resList);\r\n              setsearchText(data);\r\n            }}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      <div className=\"res-container\">\r\n        {restaurantsData.map((restaurant) => (\r\n          <RestaurantCard key={restaurant.data.id} resData={restaurant} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}