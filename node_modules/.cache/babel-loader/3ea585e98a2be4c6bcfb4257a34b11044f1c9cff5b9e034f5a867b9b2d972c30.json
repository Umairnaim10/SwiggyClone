{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practise\\\\pracise-react\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\n// not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\nimport RestaurantCard from \"./RestaurantCard\";\nimport restaurantData from \"../utils/mockdata\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [resList, setresList] = useState(restaurantData);\n  const [searchText, setsearchText] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        onClick: () => {\n          const UpdateresList = resList.filter(res => res.data.avgRating > 4);\n          setresList(UpdateresList);\n          //  Whenever react state variable is updated its re render the component\n        },\n        children: \"TOP Rated Resturants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-input\",\n          type: \"text\",\n          placeholder: \"Search\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-btn\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"res-container\",\n      children: resList.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        resData: restaurant\n      }, restaurant.data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"sMiVB5ScR+4UiRpmhNc7fSAQn6k=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["RestaurantCard","restaurantData","useState","jsxDEV","_jsxDEV","Body","_s","resList","setresList","searchText","setsearchText","className","children","onClick","UpdateresList","filter","res","data","avgRating","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","map","restaurant","resData","id","_c","$RefreshReg$"],"sources":["E:/React Practise/pracise-react/src/components/Body.js"],"sourcesContent":["// not using keys (not acceptable) <<<< index as key <<<<<<<<< unique id (best practice\r\nimport RestaurantCard from \"./RestaurantCard\";\r\nimport restaurantData from \"../utils/mockdata\";\r\nimport { useState } from \"react\";\r\n\r\nconst Body = () => {\r\n  const [resList, setresList] = useState(restaurantData);\r\n  const [searchText,setsearchText] = useState()\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"filter\">\r\n        <button\r\n          className=\"filter-btn\"\r\n          onClick={() => {\r\n            const UpdateresList = resList.filter(\r\n              (res) => res.data.avgRating > 4\r\n            );\r\n            setresList(UpdateresList);\r\n            //  Whenever react state variable is updated its re render the component\r\n          }}\r\n        >\r\n          TOP Rated Resturants\r\n        </button>\r\n\r\n        <div className=\"search-container\">\r\n          <input\r\n            className=\"search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            value =\"\"\r\n          />\r\n\r\n          <button className=\"search-btn\">Search</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"res-container\">\r\n        {resList.map((restaurant) => (\r\n          <RestaurantCard key={restaurant.data.id} resData={restaurant} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n"],"mappings":";;AAAA;AACA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAACD,cAAc,CAAC;EACtD,MAAM,CAACQ,UAAU,EAACC,aAAa,CAAC,GAAGR,QAAQ,EAAE;EAC7C,oBACEE,OAAA;IAAKO,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBR,OAAA;MAAKO,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBR,OAAA;QACEO,SAAS,EAAC,YAAY;QACtBE,OAAO,EAAEA,CAAA,KAAM;UACb,MAAMC,aAAa,GAAGP,OAAO,CAACQ,MAAM,CACjCC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAACC,SAAS,GAAG,CAAC,CAChC;UACDV,UAAU,CAACM,aAAa,CAAC;UACzB;QACF,CAAE;QAAAF,QAAA,EACH;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAETlB,OAAA;QAAKO,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BR,OAAA;UACEO,SAAS,EAAC,cAAc;UACxBY,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,QAAQ;UACpBC,KAAK,EAAE;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACT,eAEFlB,OAAA;UAAQO,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACNlB,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BL,OAAO,CAACmB,GAAG,CAAEC,UAAU,iBACtBvB,OAAA,CAACJ,cAAc;QAA0B4B,OAAO,EAAED;MAAW,GAAxCA,UAAU,CAACV,IAAI,CAACY,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAChB,EAAA,CArCID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}